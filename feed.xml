<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"><channel><title>冻结的黎明 - 博客</title><link>http://qf.yqplan.com</link><description>go,php</description><lastBuildDate>Wed, 28 Sep 2016 09:28:25 +0800</lastBuildDate><item><title>关于积累</title><link>http://qf.yqplan.com/2016/9/26/2016-09-26-14-07.html</link><pubDate>Mon, 26 Sep 2016 14:07:00 +0000</pubDate><category>随笔</category><description><![CDATA[ <p>前些天和朋友吃饭，我讲到最近有很多同事跳槽，工资涨了好多，他讲他们这样跳槽那怎么积累呢，积累这个词似乎很熟悉，我记得自己刚开始工作的时候，经常一些同事，还有逛CSDN的时候一些老前辈都说，你不能轻易跳槽，你只有在一个公司做的时间长了，公司的核心的东西才能交由你做，这样你才能学习到东西。</p>

<p>积累无非就是学到或得到东西，这些东西包括技术、为人处世、人脉等等，这里只讲技术方面，通常在公司的累积可以理解为通过完成公司的任务学习到的技术，我觉得积累可以分为3个方面</p>

<h4>1.学习公司已有的技术</h4>

<p>假设你刚毕业，加入了一家已经有一定规模的公司，公司可能考虑到你的技术能力的原因，只会让你做一些边边角角事情，而一切对你都是新的，从任何的工作中你都能学到东西，随着你能力的增加，公司给你的任务也越来越复杂，你可以通过这些锻炼自己的技术，并且还能获得同事的帮助，从同事那里也能学到东西。</p>

<h4>2.通过自己的研究实践去学习</h4>

<p>依互联网公司为例，假设在理想情况下， 你加入公司之后，为公司开发的第一个版本的系统能支持1W的并发量，公司的业务不断的成长，很快并发量就超过了1W，这时候你需要查阅资料，不断测试实践之后，使公司的系统能支持10W的并发量了，但是很快10W的并发量也快不够用了，这时候你又需要不断的研究实践去提高系统的性能和吞吐量，这个时间不通过不断解决公司的问题积累了很多的东西。</p>

<h4>3.宽度扩展</h4>

<p>随着公司的发展，你可能需要经常学习不同的技术去满足公司的发展需要。</p>

<p>但是</p>
 ]]></description></item><item><title>centos7 安装和配置mongodb</title><link>http://qf.yqplan.com/2016/5/19/2016-05-19-13-59.html</link><pubDate>Thu, 19 May 2016 13:59:00 +0000</pubDate><category>centos</category><category>mongodb</category><description><![CDATA[ <h3>下载</h3>

<p>官网下载地址：<a href="https://www.mongodb.com/download-center#community">https://www.mongodb.com/download-center#community</a></p>
<pre><code>//下载
curl -O https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-3.2.6.tgz

% Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                             Dload  Upload   Total   Spent    Left  Speed
100 55.2M  100 55.2M    0     0  35665      0  0:27:05  0:27:05 --:--:-- 60124

//解压
tar -zxvf mongodb-linux-x86_64-3.2.6.tgz

mongodb-linux-x86_64-3.2.6/README
mongodb-linux-x86_64-3.2.6/THIRD-PARTY-NOTICES
mongodb-linux-x86_64-3.2.6/MPL-2 
mongodb-linux-x86_64-3.2.6/GNU-AGPL-3.0
mongodb-linux-x86_64-3.2.6/bin/mongodump
mongodb-linux-x86_64-3.2.6/bin/mongorestore
mongodb-linux-x86_64-3.2.6/bin/mongoexport
mongodb-linux-x86_64-3.2.6/bin/mongoimport
mongodb-linux-x86_64-3.2.6/bin/mongostat
mongodb-linux-x86_64-3.2.6/bin/mongotop
mongodb-linux-x86_64-3.2.6/bin/bsondump
mongodb-linux-x86_64-3.2.6/bin/mongofiles
mongodb-linux-x86_64-3.2.6/bin/mongooplog
mongodb-linux-x86_64-3.2.6/bin/mongoperf
mongodb-linux-x86_64-3.2.6/bin/mongod
mongodb-linux-x86_64-3.2.6/bin/mongos
mongodb-linux-x86_64-3.2.6/bin/mongo

//移动改名
mv mongodb-linux-x86_64-3.2.6 mongodb
</code></pre>

<h3>配置</h3>

<h4>1.创建目录</h4>
<pre><code>cd /usr/local/mongodb

mkdir data
mkdir logs
</code></pre>

<h4>2.添加配置文件</h4>
<pre><code>vim mongodb.conf 
port=27017
logappend=true
fork=true
dbpath=/usr/local/mongodb/data
logpath=/usr/local/mongodb/logs/mongodb.log
:wq!
</code></pre>

<h4>3.不加auth验证启动</h4>
<pre><code>//主要是 mongodb3.x 无默认账号 需要登录后创建admin账户 后面会讲
./bin/mongod -f mongodb.conf

about to fork child process, waiting until server is ready for connections.
forked process: 26932
child process started successfully, parent exiting
</code></pre>

<h4>4.启动mongo shell</h4>
<pre><code>./bin/mongo

MongoDB shell version: 3.2.6
connecting to: test 
Welcome to the MongoDB shell.
For interactive help, type &quot;help&quot;.
For more comprehensive documentation, see
    http://docs.mongodb.org/
Questions? Try the support group
    http://groups.google.com/group/mongodb-user
</code></pre>

<h4>5.添加管理用户</h4>
<pre><code>use admin  
db.createUser(  
    {  
        user: &quot;admin&quot;,  
        pwd: &quot;admin&quot;,  
        roles: [ { role: &quot;userAdminAnyDatabase&quot;, db: &quot;admin&quot; } ]  
   }  
)  
//查看创建的用户
show users或者db.system.users.find()  

{
    &quot;_id&quot; : &quot;admin.admin&quot;,
    &quot;user&quot; : &quot;admin&quot;,
    &quot;db&quot; : &quot;admin&quot;,
    &quot;roles&quot; : [
            {
                    &quot;role&quot; : &quot;userAdminAnyDatabase&quot;,
                    &quot;db&quot; : &quot;admin&quot;
            }
    ]
}
</code></pre>

<h4>6.关闭mongod服务 使用&ndash;auth重新启动服务</h4>
<pre><code>ps aux | grep mongo

kill -2 xxxx

//重新启动
./bin/mongod -f mongodb.conf --auth
</code></pre>

<h4>7.再次启动 mongo shell 使用auth验证登录</h4>
<pre><code>./bin/mongo

use admin

db.auth(&quot;admin&quot;,&quot;admin&quot;)
//返回1  代表认证成功
</code></pre>

<h4>8.创建用户和库</h4>
<pre><code>use test

db.createUser({  
    user: &quot;test&quot;,  
    pwd: &quot;test&quot;,  
    roles: [  
        { role: &quot;readWrite&quot;, db: &quot;test&quot; }  
    ]  
}) 
</code></pre>

<h4>9. 使用新创建的用户登录</h4>
<pre><code>use test
db.auth(&quot;test&quot;, &quot;test&quot;) 
//返回1 登录成功
</code></pre>

<h3>开机启动</h3>

<h4>1.创建开机启动脚本</h4>
<pre><code> cd /etc/init.d/

 vim mongodb

 //写入以下脚本

 #!/bin/bash

#mongod - Startup script for mongod

# chkconfig: 35 80 15
# description: Mongo is a scalable, document-oriented database.
# processname: mongod
#config: /usr/local/mongodb/mongodb.conf
# pidfile: /var/run/mongo/mongo.pid

MONGOD=/usr/local/mongodb/bin/mongod

mongod_start(){
    $MONGOD -f /usr/local/mongodb/mongodb.conf -auth
}
mongod_stop(){
    killall -2 mongod
}

case &quot;$1&quot; in
start)
    echo start...
    mongod_start
    if [ $? == 0 ];then
        echo &quot;Secuss start MongoDB!&quot;
    fi
;;
stop)
    mongod_stop
    if [ $? == 0 ];then
        echo &quot;MongoDB is shutdown now !&quot;
    fi
;;
restart)
    mongod_stop
    mongod_start
;;
*)
echo &quot;Use args (start|stop|restart)&quot;
;;
esac

:wq

//赋予执行权限
chmod +x /etc/init.d/mongodb

//测试一下开启和关闭mongodb
service mongodb start
service mongodb stop
</code></pre>

<h4>2.加入开机启动</h4>
<pre><code>chkconfig mongodb on
</code></pre>

<p>参考资料</p>

<p><a href="https://www.mongodb.com/download-center#community">https://www.mongodb.com/download-center#community</a></p>

<p><a href="http://blog.csdn.net/hugengyong/article/details/49799447">http://blog.csdn.net/hugengyong/article/details/49799447</a></p>

<p><a href="http://blog.csdn.net/lk10207160511/article/details/50281883">http://blog.csdn.net/lk10207160511/article/details/50281883</a></p>

<p><a href="http://my.oschina.net/fsxchen/blog/261887">http://my.oschina.net/fsxchen/blog/261887</a></p>
 ]]></description></item><item><title>微信文档地址记录</title><link>http://qf.yqplan.com/2016/2/23/2016-02-23-09-47.html</link><pubDate>Tue, 23 Feb 2016 09:47:00 +0000</pubDate><category>微信</category><description><![CDATA[ <h4>开发文档</h4>

<p><a href="http://mp.weixin.qq.com/wiki/5/f287d1a5b78a35a8884326312ac3e4ed.html">http://mp.weixin.qq.com/wiki/5/f287d1a5b78a35a8884326312ac3e4ed.html</a></p>

<h4>微信支付</h4>

<p><a href="https://pay.weixin.qq.com/wiki/doc/api/app.php?chapter=11_2">https://pay.weixin.qq.com/wiki/doc/api/app.php?chapter=11_2</a></p>
 ]]></description></item><item><title>Centos7 搭建git服务器</title><link>http://qf.yqplan.com/2016/2/19/centos7-git-server.html</link><pubDate>Fri, 19 Feb 2016 10:02:00 +0000</pubDate><category>centos</category><category>yum</category><category>git</category><description><![CDATA[ <h4>安装</h4>
<pre><code>yum install -y git
</code></pre>

<h4>创建用户</h4>
<pre><code>adduser git
</code></pre>

<h4>创建登录证书</h4>
<pre><code>cd /home/git

mkdir .ssh

cd .ssh

//生成认证文件 authorized_keys 
//公钥id_rsa.pub
ssh-keygen -t rsa

//公钥写入认证文件
//这里可以将其他客户端的公钥写入这个文件进行授权认证
cat id_rsa.pub &gt;&gt; authorized_keys 
</code></pre>

<h4>初始化git仓库</h4>
<pre><code>mkdir /data/git

cd /data/git

//创建一个裸仓库
git init --bare empty.git

chown -R git:git empty.git
</code></pre>

<h4>禁用shell</h4>
<pre><code>vim /etc/passwd
</code></pre>

<p>将</p>
<pre><code>git:x:1001:1001:,,,:/home/git:/bin/bash
</code></pre>

<p>修改为</p>
<pre><code>git:x:1001:1001:,,,:/home/git:/usr/bin/git-shell
</code></pre>

<h4>clone</h4>
<pre><code>git clone git@x.x.x.x:/data/git/emtpy.git
</code></pre>
 ]]></description></item><item><title>新的开始</title><link>http://qf.yqplan.com/2016/2/18/2016-02-18.html</link><pubDate>Thu, 18 Feb 2016 15:38:00 +0000</pubDate><description><![CDATA[ <p>换了新的博客，希望能坚持下去</p>
 ]]></description></item><item><title>我是如何将linux用在开发环境中的</title><link>http://qf.yqplan.com/2015/8/8/2016-02-18-16-31.html</link><pubDate>Sat, 08 Aug 2015 16:31:00 +0000</pubDate><category>post</category><description><![CDATA[ <h2>我为什么要写这篇文章</h2>

<p>一直想深入学习一下linux的使用，于是将家里的笔记本装了linux系统，但是要将自己的系统打造一个适合开发的环境确实是一件费心费力的事，而且会经常出现一些莫名其妙的问题，以我自己的使用经验觉得要想用linux做开发环境，你要了解每个软件，不然出现一些问题就很难解决，其他不说，就是光搞好驱动问题就让人蛋疼了。</p>

<p>我的电脑装了linux之后一直高温不下，在网上找了一些方法，关掉独显也好不了多少，开机2个小时温度就飙到70-90度，试过很多发行版，debian,ubuntu,centos,fedora均没解决问题，至于那些gentoo之类的光看评论就吓尿了，每次都要折腾好久的驱动问题，还有些系统的源都被党国屏蔽了，如果要将驱动，开发环境，办公使用的软件折腾完真的是一件费心费力的事，而且只能使用web qq， wineqq还是那么老的版本也不好用, bclode经常登录不上去，报未知错误，由于工作的需要，我注定不适合完全linux办公环境。但是作为一个程序员linux的使用和排错能力还是要有的，于是我今天就分享我使用的方式。</p>

<h2>windows + 虚拟机</h2>

<p>在虚拟机里面装linux是很普遍的，我很多同事为了学习就在虚拟机里面装了linux，没事的时候倒腾两下，但是并没有用到实际工作中去，于是我就想为何不将我们的代码，服务放到linux虚拟机里面去，然后用windows访问里面的服务，代码可以在windows下开发，部署放到linux里，我觉得这样做有以下好处：</p>

<p>1.跟生产环境同步，保证自己的代码可以在linux下运行。</p>

<p>2.移植方便，直接把虚拟机文件打包考到另外一台电脑上面就可以使用了。</p>

<p>3.定期可以将虚拟机文件放到云盘中，等于备份了系统，随时还原 （但是文件太大上传有点麻烦，备份到硬盘倒是很方便的）</p>

<p>4.因为linux用到开发中了，经常玩肯定能学到东西，这个就不用说了。</p>

<h2>实现</h2>

<p>在网上看了各种虚拟机比较，当然还是VMware比较好，而且提供了VMvare-tools，共享文件夹，共享网络都很好，共享的文件夹就挂载到了linux中，可以将开发的代码放到共享文件夹里面，这样linux就可以部署了，也不需要代码拷来考去，或者用svn更新什么的，就比较麻烦了。</p>

<p>我的方案是win7+centos7 因为生产环境使用的是centos，不过实际实现时有一些注意事项：</p>

<p>vmvare提供了3种网络共享的方式 桥接、NAT及host-only 具体有什么区别我就不说了，自己查吧。一般都是使用桥接，这样虚拟机就相当于一台独立的机器，其他机器就可以访问虚拟机里面的服务，但是我工作的公司因为每台电脑都要进行mac登记才能上网，所以我不得不选择nat方式，nat方式不需要什么设置，比较简单，但是主机无法访问虚拟机里面的服务，后来在网上找到解决的方法就是做端口映射。</p>

<p>上图：</p>

<p><img src="/static/media/2015/8/082335296597330.jpg" alt="image" /></p>

<p>通过本机的800端口来访问虚拟机里面的80端口，实现也很简单，只需要在虚拟机里面做一个端口映射就可以了。
在vmware里的 编辑-&gt;虚拟网络编辑器-&gt; 选择nat模式 net设置-&gt;添加</p>

<p>如图：
<img src="/static/media/2015/8/082326106432048.jpg" alt="image" /></p>

<p>然后保存就好了，如果不行还要做检查一下linux的防火墙，开放80端口。如果要让别人的电脑也能访问，还需要在windows防火墙设置一下。当然哥比较懒，因为开发的时候经常要给别人看，都是直接关闭防火墙。当然你也可以将数据库什么的都放到linux里面去，windows只装一些软件使用linux里面的服务。</p>

<p>但是用虚拟机如果要想不卡对电脑的配置还是要有要求的，我是8G内存，虚拟机开2G内存，开启虚拟机，IDE等工作软件基本要占用80%-90%的内存，使用还是比较流畅的，也可以将虚拟机后台运行，只使用它的服务就好了。</p>
 ]]></description></item><item><title>python apache下出现The _imaging C module is not installed</title><link>http://qf.yqplan.com/2013/12/12/2016-02-18-16-59.html</link><pubDate>Thu, 12 Dec 2013 16:59:00 +0000</pubDate><category>post</category><description><![CDATA[ <p>操作系统：win7 64位</p>

<p>安装python版本 win32 2.7版本</p>

<p>安装的PIL插件PIL-1.1.7.win32-py2.7.exe</p>

<p>用本地自带的开发服务器上传图片处理等一切正常</p>

<p>放到APACHE下上传图片出现</p>
<pre><code>The _imaging C module is not installed
</code></pre>

<p>下载Pillow-2.2.1.win32-py2.7.exe 安装后正常使用</p>

<p>下载地址<a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/">http://www.lfd.uci.edu/~gohlke/pythonlibs/</a></p>

<p>里面有很多python的扩展</p>

<p>linux 下</p>

<h4>安装PIP</h4>
<pre><code>wget http://pypi.python.org/packages/source/p/pip/pip-1.0.2.tar.gz

tar zxf pip-1.0.2.tar.gz

cd pip-1.0.2
</code></pre>

<p>先要安装<code>python-deve</code></p>
<pre><code>yum install python-devel

python setup.py install

pip install pillow
</code></pre>
 ]]></description></item></channel></rss>